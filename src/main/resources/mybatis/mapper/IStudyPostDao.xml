<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.tjspring.study.dao.IStudyPostDao">

    <!-- StudyPostViewDto ResultMap -->
    <resultMap id="PostViewDtoResultMap" type="com.ex.tjspring.study.dto.StudyPostViewDto">
        <id property="studyPostId" column="study_post_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="groupId" column="group_id"/>
        <result property="authorId" column="author_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="recruitStartDate" column="recruit_start_date"/>
        <result property="recruitEndDate" column="recruit_end_date"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="viewCount" column="view_count"/>
        <result property="hashTag" column="hash_tag"/>
        <result property="profileImage" column="profile_image"/>

        <collection property="attachFile" ofType="com.ex.tjspring.common.dto.AttachFileDto">
            <id property="id" column="attach_id"/>
            <result property="postId" column="attach_post_id"/>
            <result property="fileName" column="attach_file_name"/>
            <result property="storedFileName" column="attach_stored_file_name"/>
            <result property="fileSize" column="attach_file_size"/>
            <result property="fileType" column="attach_file_type"/>
            <result property="regDate" column="attach_reg_date"/>
        </collection>
    </resultMap>

    <!-- 결과 매핑 -->
    <resultMap id="GroupNickDtoMap" type="com.ex.tjspring.study.dto.GroupNickDto">
        <id property="groupId" column="group_id"/>
        <result property="groupName" column="group_name"/>
        <result property="category" column="category"/>
        <result property="maxMembers" column="max_members"/>
        <result property="studyMode" column="study_mode"/>
        <result property="region" column="region"/>
        <result property="contact" column="contact"/>
        <result property="groupIntroduction" column="group_introduction"/>
        <result property="groupOwnerId" column="group_owner_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="thumbnail" column="thumbnail"/>
        <result property="nickName" column="nickname"/>
    </resultMap>

    <!-- 그룹 ID 기준 조회 -->
    <select id="selectGroupsFindByGroupId" resultMap="GroupNickDtoMap">
        SELECT s.group_id,
                   s.group_name,
                   s.category,
                   s.max_members,
                   s.study_mode,
                   s.region,
                   s.contact,
                   s.group_introduction,
                   s.group_owner_id,
                   s.created_at,
                   s.thumbnail,
                   (SELECT m.nickname
                    FROM STUDY_MEMBERSHIP m
                    WHERE m.user_id = s.group_owner_id
                          AND ROWNUM = 1) AS nickname
        FROM STUDY_GROUPS s
        WHERE s.group_id = #{groupId}
    </select>

    <!-- 유저 ID 기준 조회 -->
    <select id="selectGroupsFindByUserId" resultMap="GroupNickDtoMap">
        SELECT s.group_id,
                   s.group_name,
                   s.category,
                   s.max_members,
                   s.study_mode,
                   s.region,
                   s.contact,
                   s.group_introduction,
                   s.group_owner_id,
                   s.created_at,
                   s.thumbnail,
                   (SELECT m.nickname
                    FROM STUDY_MEMBERSHIP m
                    WHERE m.user_id = s.group_owner_id
                          AND ROWNUM = 1) AS nickname
        FROM STUDY_GROUPS s
        WHERE s.group_owner_id = #{userId}
    </select>

    <!-- 게시글 존재 여부 -->
    <select id="existsPostByGroupId" parameterType="java.lang.Long" resultType="int">
        SELECT COUNT(*) FROM STUDY_POST WHERE group_id = #{groupId}
    </select>

    <!-- 게시글 조회 (첨부파일 포함) -->
    <select id="selectPostFindByGroupId" resultMap="PostViewDtoResultMap" parameterType="java.lang.Long">
        SELECT
            e.study_post_id,
            e.title,
            e.content,
            e.group_id,
            e.author_id,
            e.created_at,
            e.recruit_start_date,
            e.recruit_end_date,
            e.updated_at,
            e.view_count,
            e.hash_tag,
            a.id AS attach_id,
            a.post_id AS attach_post_id,
            a.file_name AS attach_file_name,
            a.stored_file_name AS attach_stored_file_name,
            a.file_size AS attach_file_size,
            a.file_type AS attach_file_type,
            a.reg_date AS attach_reg_date,
            u.profile_image
        FROM STUDY_POST e
             LEFT JOIN ATTACHMENTS a ON e.study_post_id = a.post_id
             LEFT JOIN USERS u ON e.author_id = u.id
        WHERE e.group_id = #{groupId}
    </select>

    <!-- 북마크 수 조회 -->
    <select id="selectFindByGroupIdBookmarkCnt" parameterType="java.lang.Long" resultType="int">
        SELECT COUNT(*) FROM USER_BOOKMARK WHERE group_id = #{groupId}
    </select>

    <!-- 게시글 등록 -->
    <insert id="insertPost" parameterType="com.ex.tjspring.study.dto.StudyPostDto">
        <selectKey keyProperty="studyPostId" resultType="java.lang.Long" order="BEFORE">
            SELECT SEQ_STUDY_POST_ID.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO STUDY_POST (study_post_id, title, content, group_id , author_id , created_at , recruit_start_date , recruit_end_date , updated_at , view_count , hash_tag )
        VALUES (#{studyPostId}, #{title}, #{content}, #{groupId} ,#{authorId} , SYSTIMESTAMP , #{recruitStartDate} ,  #{recruitEndDate} , SYSTIMESTAMP , 0 , #{hashTag} )
    </insert>

    <!-- 게시글 수정 -->
    <update id="updatePost" parameterType="com.ex.tjspring.study.dto.StudyPostDto">
        UPDATE STUDY_POST
        SET title = #{title}, content = #{content} , recruit_start_date = #{recruitStartDate} , recruit_end_date = #{recruitEndDate} , hash_tag = #{hashTag} , updated_at = SYSTIMESTAMP
        WHERE study_post_id = #{studyPostId}
    </update>

    <!-- 조회수 증가 -->
    <update id="increasePostViewCnt" parameterType="java.lang.Long">
        UPDATE STUDY_POST
        SET view_count = NVL(view_count, 0) + 1
        WHERE study_post_id = #{studyPostId}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deletePost" parameterType="java.lang.Long">
        DELETE FROM STUDY_POST
        WHERE study_post_id = #{studyPostId}
    </delete>

</mapper>
