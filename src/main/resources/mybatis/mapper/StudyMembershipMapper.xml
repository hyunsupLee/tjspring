<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.tjspring.study.dao.StudyMembershipDao">

    <!-- ResultMap 정의 -->
    <resultMap id="StudyMembershipResultMap" type="com.ex.tjspring.study.dto.StudyMembershipDto">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="groupId" column="group_id"/>
        <result property="joinedAt" column="joined_at"/>
        <result property="leftAt" column="left_at"/>
        <result property="membershipStatus" column="membership_status"/>
        <result property="memberRole" column="member_role"/>
        <result property="nickname" column="nickname"/>
    </resultMap>

    <!-- 멤버십 등록 -->
    <insert id="insertMembership" parameterType="com.ex.tjspring.study.dto.StudyMembershipDto" keyProperty="id">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT SEQ_STUDY_MEMBERSHIP_ID.NEXTVAL FROM dual
        </selectKey>
        INSERT INTO study_membership (
        id,
        user_id,
        group_id,
        nickname
        ) VALUES (
        #{id},
        #{userId},
        #{groupId},
        (SELECT nickname FROM users WHERE id = #{userId})
        )
    </insert>

    <!-- 중복 체크 -->
    <select id="selectMembershipByUserAndGroup" resultMap="StudyMembershipResultMap">
        SELECT *
        FROM study_membership
        WHERE user_id = #{userId}
        AND group_id = #{groupId}
    </select>




    <!-- 그룹 ID로 멤버십 목록 조회 -->
    <select id="selectMembershipsByGroupId" resultMap="StudyMembershipResultMap">
        SELECT *
        FROM study_membership
        WHERE group_id = #{groupId}
        ORDER BY joined_at DESC
    </select>

    <!-- 사용자 ID로 멤버십 목록 조회 -->
    <select id="selectMembershipsByUserId" resultMap="StudyMembershipResultMap">
        SELECT *
        FROM study_membership
        WHERE user_id = #{userId}
        ORDER BY joined_at DESC
    </select>

    <!-- 닉네임 수정 -->
    <update id="updateNickname">
        UPDATE study_membership
        SET nickname = #{nickname}
        WHERE user_id = #{userId}
        AND group_id = #{groupId}
    </update>

    <!-- 그룹 탈퇴 처리 (상태 변경 + left_at 기록) -->
    <update id="leaveMembership">
        UPDATE study_membership
        SET membership_status = 'INACTIVE',
        left_at = SYSDATE
        WHERE user_id = #{userId}
        AND group_id = #{groupId}
    </update>
</mapper>