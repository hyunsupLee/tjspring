<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ex.tjspring.study.dao.GroupDao">

    <!-- 그룹 생성 -->
    <insert id="insertGroup" parameterType="com.ex.tjspring.study.dto.GroupInsertDto"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO STUDY_GROUPS (
        GROUP_NAME, NICK_NAME, CATEGORY, MAX_MEMBERS, STUDY_MODE, REGION,
        CONTACT, GROUP_INTRODUCTION, THUMBNAIL_URL, RECRUIT_END_DATE,
        STUDY_START_DATE, STUDY_END_DATE, GROUP_OWNER_ID, CREATED_AT, STATUS
        ) VALUES (
        #{groupName}, #{nickName}, #{category}, #{maxMembers}, #{studyMode}, #{region},
        #{contact}, #{groupIntroduction}, #{thumbnailUrl}, #{recruitEndDate}, #{studyStartDate},
        #{studyEndDate}, #{groupOwnerId}, SYSDATE, 'RECRUITING'
        )
    </insert>

    <!-- 전체 그룹 조회 -->
    <select id="selectAllGroups" resultType="com.ex.tjspring.study.dto.GroupDto">
        SELECT
        ID as id,
        GROUP_NAME as groupName,
        NICK_NAME as nickName,
        CATEGORY as category,
        MAX_MEMBERS as maxMembers,
        STUDY_MODE as studyMode,
        REGION as region,
        CONTACT as contact,
        GROUP_INTRODUCTION as groupIntroduction,
        THUMBNAIL_URL as thumbnailUrl,
        RECRUIT_END_DATE as recruitEndDate,
        STUDY_START_DATE as studyStartDate,
        STUDY_END_DATE as studyEndDate,
        GROUP_OWNER_ID as groupOwnerId,
        CREATED_AT as createdAt,
        STATUS as status
        FROM STUDY_GROUPS
    </select>

    <!-- 특정 그룹 조회 -->
    <select id="selectGroupById" parameterType="java.lang.Long"
            resultType="com.ex.tjspring.study.dto.GroupDto">
        SELECT
        ID as id,
        GROUP_NAME as groupName,
        NICK_NAME as nickName,
        CATEGORY as category,
        MAX_MEMBERS as maxMembers,
        STUDY_MODE as studyMode,
        REGION as region,
        CONTACT as contact,
        GROUP_INTRODUCTION as groupIntroduction,
        THUMBNAIL_URL as thumbnailUrl,
        RECRUIT_END_DATE as recruitEndDate,
        STUDY_START_DATE as studyStartDate,
        STUDY_END_DATE as studyEndDate,
        GROUP_OWNER_ID as groupOwnerId,
        CREATED_AT as createdAt,
        STATUS as status
        FROM STUDY_GROUPS
        WHERE ID = #{id}
    </select>

    <!-- 그룹 수정 -->
    <update id="updateGroup" parameterType="com.ex.tjspring.study.dto.GroupEditDto">
        UPDATE STUDY_GROUPS
        SET
        GROUP_NAME = #{groupName},
        NICK_NAME = #{nickName},
        MAX_MEMBERS = #{maxMembers},
        CONTACT = #{contact},
        THUMBNAIL = #{thumbnail},
        RECRUIT_END_DATE = #{recruit_end_date},
        STUDY_END_DATE = #{study_end_date},
        GROUP_INTRODUCTION = #{groupIntroduction}
        WHERE ID = #{id}
    </update>

    <!-- 그룹 삭제 -->
    <delete id="deleteGroup" parameterType="java.lang.Long">
        DELETE FROM STUDY_GROUPS
        WHERE ID = #{id}
    </delete>

    <!-- 그룹명 중복 확인 -->
    <select id="existsByGroupName" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM STUDY_GROUPS
        WHERE GROUP_NAME = #{groupName}
    </select>

    <!-- 닉네임 중복 확인 -->
    <select id="existsByNickName" parameterType="String" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM STUDY_GROUPS
        WHERE NICK_NAME = #{nickName}
    </select>

    <!-- 그룹 상태 업데이트 -->
    <update id="updateGroupStatus">
        UPDATE STUDY_GROUPS
        SET STATUS = #{status}
        WHERE ID = #{id}
    </update>

</mapper>